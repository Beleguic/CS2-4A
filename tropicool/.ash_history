npm install vue-router@4
npm install
exit
npm install pinia
exit
<template>
  <nav class="navbar">
    <img src="../assets/logo.webp" alt="Logo" class="navbar-logo">
    <div class="navbar-links">
      <router-link v-if="!isLoggedIn" to="/login">Connexion</router-link>
      <router-link v-if="!isLoggedIn" to="/register">Inscription</router-link>
      <router-link v-if="isLoggedIn" to="/logout" @click="logout">Déconnexion</router-link>
    </div>
  </nav>
</template>
<script setup>
import { ref, onMounted } from 'vue';
import axios from 'axios';
const isLoggedIn = ref(false);
onMounted(async () => {
  try {
    const response = await axios.get('/api/auth/status');
    isLoggedIn.value = response.data.isLoggedIn;
  } catch (error) {
    console.error('Erreur lors de la vérification de l\'état de connexion', error);
  }
});
function logout() {
  // Ajoutez ici la logique pour gérer la déconnexion
  axios.post('/api/auth/logout').then(() => {
    isLoggedIn.value = false;
    // Redirigez vers la page de connexion ou la page d'accueil
  }).catch(error => {
    console.error('Erreur lors de la déconnexion', error);
  });
}
</script>
<style scoped>
.navbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  background-color: #333;
  color: #fff;
  width: 100%;
}
.navbar-logo {
  width: 50px;
}
.navbar-links a {
  color: #fff;
  text-decoration: none;
  margin-left: 1rem;
}
</style>
npm install axios 
exit
npm install zod
npm install 
exit
npm install sequelize pg pg-hstore
exit
