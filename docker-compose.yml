version: "3"

services:
  mongo:
    image: mongo
    ports:
      - 127.0.0.1:27017:27017
    volumes:
      - mongo-data:/data/db
      - ./SampleCollections:/SampleCollections
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    working_dir: /SampleCollections

  node:
    image: node:20.0.0-alpine
    environment:
      PORT: 3000
      MONGO_URL: mongodb://root:password@mongo:27017/app?authSource=admin
      DATABASE_URL: postgres://root:password@postgres:5432/app
      JWT_SECRET: secret
    ports:
      - 127.0.0.1:3000:3000
    volumes:
      - ./backend:/home/node/app
    working_dir: /home/node/app
    command: sh -c "npm install && npm run dev node --watch"

  vue:
    image: node:20.0.0-alpine
    user: node
    working_dir: /home/node
    command: npm run dev -- --port 5174 --host
    ports:
      - "127.0.0.1:8000:5174"
    volumes:
      - ./tropicool:/home/node
 
  postgres:
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: app

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - /var/www/certbot:/var/www/certbot
    depends_on:
      - node
      - vue
      - postgres

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./nginx/conf.d:/etc/nginx/conf.d

  adminer:
    image: adminer
    restart: always
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    ports:
      - 8080:8080


  samba:
    image: dperson/samba
    restart: always
    ports:
      - 137:137/udp
      - 138:138/udp
      - 139:139/tcp
      - 445:445/tcp
    volumes:
      - ./shared:/mount
    environment:
      USERID: 1000
      GROUPID: 1000
    command: '-s "public;/mount;yes;no;no;allusers"'

volumes:
  mongo-data: {}
  postgres-data: {}
  certbot-etc: {}
  certbot-var: {}
