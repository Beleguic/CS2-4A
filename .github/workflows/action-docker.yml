name: CI Docker Compose Test

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: password

      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: password
          POSTGRES_DB: app_prod

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Compose
      run: docker-compose --version

    - name: Copy .env.example to .env.development
      run: cp .env.example .env.development

    - name: Fix npm permissions in Vue container
      run: docker-compose run --rm --user root vue sh -c "mkdir -p /home/node/.npm && chown -R node:node /home/node/.npm"

    - name: Install dependencies in Node container
      run: docker-compose run --rm --user root node npm install

    - name: Install dependencies in Vue container
      run: docker-compose run --rm --user root vue npm install

    - name: Start services with Docker Compose
      run: docker-compose --env-file .env.development up -d

    - name: Wait for services to be ready
      run: sleep 30

    - name: Run migrations in Node container
      run: docker-compose exec -T node npm run migrate

    - name: List used ports
      run: netstat -tuln

    - name: Wait for backend service to be ready
      run: sleep 10

    - name: Wait for Vue service to be ready
      run: |
        for i in `seq 1 30`; do
          curl -f http://localhost:8000 && break
          echo "Waiting for Vue service to be ready..."
          sleep 5
        done

    - name: Check Vue service
      run: curl -f http://localhost:8000 || exit 1

    - name: Check Node service
      run: curl -f http://localhost:3000 || exit 1

    - name: Tear down services
      if: always()
      run: docker-compose down
